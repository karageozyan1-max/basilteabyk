'use client';

import React, { useMemo } from 'react';
import { View, Text, Image, StyleSheet, ScrollView, TouchableOpacity, Dimensions } from 'react-native';
import { SafeAreaView } from 'react-native-safe-area-context';
import { useRouter, useLocalSearchParams } from 'expo-router';
import { SIZE_PRICES } from './prices';

const BG_CREAM = '#fdf6ec';
const GREEN = '#0b3d2e';
const GOLD = '#c7a45a';

const { width } = Dimensions.get('window');
const isSmall = width < 380;
const BTN_H = isSmall ? 42 : 48;

type SizeKey = '8oz' | '12oz';

export default function CartPage() {
Â Â const router = useRouter();
Â Â const params = useLocalSearchParams<{ size?: string; pack?: string; qty?: string }>();

Â Â const size: SizeKey = (params.size as SizeKey) || '8oz';
Â Â const pack = Math.max(0, parseInt(params.pack || '0', 10));
Â Â const qtyÂ Â = Math.max(1, parseInt(params.qty || '1', 10));

Â Â const unit = SIZE_PRICES[size] ?? 0;
Â Â const total = useMemo(() => unit * pack * qty, [unit, pack, qty]);
Â Â const hasItem = pack > 0 && qty > 0;

Â Â const goCheckout = () =>
Â Â Â Â router.push({ pathname: '/checkout', params: { size, pack: String(pack), qty: String(qty) } });

Â Â return (
Â Â Â Â <SafeAreaView style={{ flex: 1, backgroundColor: BG_CREAM }}>
Â Â Â Â Â Â <ScrollView contentContainerStyle={{ padding: 20, paddingBottom: 54 }} showsVerticalScrollIndicator={false}>
Â Â Â Â Â Â Â Â <View style={styles.card}>
Â Â Â Â Â Â Â Â Â Â <View style={styles.headerRow}>
Â Â Â Â Â Â Â Â Â Â Â Â {hasItem && ( // ðŸ‘ˆ only show bottle image if there is an item
Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Image
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â source={require('../assets/images/basil-bottle.png')}
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â style={{ width: 56, height: 56, marginRight: 12 }}
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â resizeMode="contain"
Â Â Â Â Â Â Â Â Â Â Â Â Â Â />
Â Â Â Â Â Â Â Â Â Â Â Â )}
Â Â Â Â Â Â Â Â Â Â Â Â <View style={{ flex: 1, minWidth: 0 }}>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.title}>Your Cart</Text>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.subtitle}>{hasItem ? `${qty} Ã— ${pack}-pack â€¢ ${size}` : 'No items'}</Text>
Â Â Â Â Â Â Â Â Â Â Â Â </View>
Â Â Â Â Â Â Â Â Â Â </View>

Â Â Â Â Â Â Â Â Â Â {hasItem ? (
Â Â Â Â Â Â Â Â Â Â Â Â <>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â <View style={{ marginTop: 14 }}>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.priceLabel}>Total</Text>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.priceValue}>${total.toFixed(2)}</Text>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â </View>

Â Â Â Â Â Â Â Â Â Â Â Â Â Â <TouchableOpacity style={styles.primaryBtn} onPress={goCheckout}>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.primaryBtnText}>Checkout</Text>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â </TouchableOpacity>

Â Â Â Â Â Â Â Â Â Â Â Â Â Â <TouchableOpacity style={styles.secondaryBtn} onPress={() => router.push('/shop')}>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.secondaryBtnText}>Continue Shopping</Text>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â </TouchableOpacity>

Â Â Â Â Â Â Â Â Â Â Â Â Â Â <TouchableOpacity style={styles.secondaryBtn} onPress={() => router.back()}>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.secondaryBtnText}>Back</Text>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â </TouchableOpacity>
Â Â Â Â Â Â Â Â Â Â Â Â </>
Â Â Â Â Â Â Â Â Â Â ) : (
Â Â Â Â Â Â Â Â Â Â Â Â <>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Text style={{ color: GOLD, marginTop: 10 }}>Your cart is empty.</Text>

Â Â Â Â Â Â Â Â Â Â Â Â Â Â <TouchableOpacity style={styles.primaryBtn} onPress={() => router.push('/shop')}>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.primaryBtnText}>Go to Shop</Text>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â </TouchableOpacity>

Â Â Â Â Â Â Â Â Â Â Â Â Â Â <TouchableOpacity style={styles.secondaryBtn} onPress={() => router.back()}>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.secondaryBtnText}>Back</Text>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â </TouchableOpacity>
Â Â Â Â Â Â Â Â Â Â Â Â </>
Â Â Â Â Â Â Â Â Â Â )}
Â Â Â Â Â Â Â Â </View>
Â Â Â Â Â Â </ScrollView>
Â Â Â Â </SafeAreaView>
Â Â );
}

const styles = StyleSheet.create({
Â Â card: {
Â Â Â Â backgroundColor: BG_CREAM,
Â Â Â Â borderRadius: 14,
Â Â Â Â padding: 18,
Â Â Â Â borderWidth: 1,
Â Â Â Â borderColor: '#eadccf',
Â Â Â Â maxWidth: 920,
Â Â Â Â alignSelf: 'center',
Â Â Â Â width: '100%',
Â Â },

Â Â headerRow: { flexDirection: 'row', alignItems: 'center' },

Â Â title: {
Â Â Â Â fontSize: isSmall ? 18 : 22,
Â Â Â Â fontWeight: '800',
Â Â Â Â color: '#fff',
Â Â Â Â backgroundColor: GREEN,
Â Â Â Â paddingHorizontal: 10,
Â Â Â Â paddingVertical: 4,
Â Â Â Â borderRadius: 6,
Â Â Â Â alignSelf: 'flex-start',
Â Â },
Â Â subtitle: {
Â Â Â Â marginTop: 6, color: GOLD, flexShrink: 1, minWidth: 0, flexWrap: 'wrap',
Â Â Â Â fontSize: isSmall ? 13 : 15, fontWeight: '600',
Â Â },

Â Â priceLabel: { fontSize: 12, color: GOLD },
Â Â priceValue: { fontSize: isSmall ? 20 : 22, fontWeight: '800', marginTop: 2, color: GREEN },

Â Â primaryBtn: {
Â Â Â Â marginTop: 16, height: BTN_H, borderRadius: 10, backgroundColor: GREEN,
Â Â Â Â alignItems: 'center', justifyContent: 'center',
Â Â },
Â Â primaryBtnText: { color: BG_CREAM, fontSize: isSmall ? 14 : 15, fontWeight: '700' },

Â Â secondaryBtn: {
Â Â Â Â marginTop: 10, height: BTN_H, borderRadius: 10,
Â Â Â Â borderWidth: 1, borderColor: GREEN, backgroundColor: BG_CREAM,
Â Â Â Â alignItems: 'center', justifyContent: 'center',
Â Â },
Â Â secondaryBtnText: { fontSize: isSmall ? 14 : 15, fontWeight: '700', color: GREEN },
});
