'use client';

import React, { useMemo, useState } from 'react';
import { View, Text, ScrollView, TouchableOpacity, Image, StyleSheet, Dimensions } from 'react-native';
import { SafeAreaView } from 'react-native-safe-area-context';
import { useRouter } from 'expo-router';
import { SIZE_PRICES } from './prices';

const BG_CREAM = '#fdf6ec';
const GREEN = '#0b3d2e';
const GOLD = '#c7a45a';

type SizeKey = '8oz' | '12oz';
const PACK_OPTIONS = [2, 6, 12];

const { width } = Dimensions.get('window');
const isSmall = width < 380;
const BTN_H = isSmall ? 44 : 52;

export default function ShopScreen() {
Â Â const router = useRouter();
Â Â const [size, setSize] = useState<SizeKey>('8oz');
Â Â const [pack, setPack] = useState<number>(PACK_OPTIONS[0]);
Â Â const [qty, setQty] = useState<number>(1);

Â Â const unit = SIZE_PRICES[size];
Â Â const total = useMemo(() => unit * pack * qty, [unit, pack, qty]);

Â Â function goToCart() {
Â Â Â Â router.push({ pathname: '/cart', params: { size, pack: String(pack), qty: String(qty) } });
Â Â }

Â Â return (
Â Â Â Â <SafeAreaView style={{ flex: 1, backgroundColor: BG_CREAM }}>
Â Â Â Â Â Â <ScrollView contentContainerStyle={{ padding: 20, paddingBottom: 54 }} showsVerticalScrollIndicator={false}>
Â Â Â Â Â Â Â Â <View style={styles.card}>

Â Â Â Â Â Â Â Â Â Â {/* Top: Big image + title */}
Â Â Â Â Â Â Â Â Â Â <Image
Â Â Â Â Â Â Â Â Â Â Â Â source={require('../assets/images/basil-bottle.png')}
Â Â Â Â Â Â Â Â Â Â Â Â style={styles.heroImage}
Â Â Â Â Â Â Â Â Â Â Â Â resizeMode="contain"
Â Â Â Â Â Â Â Â Â Â />

Â Â Â Â Â Â Â Â Â Â <Text style={styles.title}>Shop â€” Basil Tea by K</Text>
Â Â Â Â Â Â Â Â Â Â <Text style={styles.subtitle}>Honey-infused basil iced tea</Text>

Â Â Â Â Â Â Â Â Â Â {/* Product description */}
Â Â Â Â Â Â Â Â Â Â <View style={styles.descBlock}>
Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.descLine}>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â â€¢ Small-batch basil tea brewed with real basil leaves, balanced with wildflower honey.
Â Â Â Â Â Â Â Â Â Â Â Â </Text>
Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.descLine}>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â â€¢ Naturally refreshing, lightly sweet, and bottled in recyclable glass.
Â Â Â Â Â Â Â Â Â Â Â Â </Text>
Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.descLine}>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â â€¢ No concentrates â€¢ No artificial flavors â€¢ Just clean, crisp flavor.
Â Â Â Â Â Â Â Â Â Â Â Â </Text>
Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.descLine}>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â â€¢ Enjoy chilled straight from the bottle or poured over ice with a lemon slice.
Â Â Â Â Â Â Â Â Â Â Â Â </Text>
Â Â Â Â Â Â Â Â Â Â </View>

Â Â Â Â Â Â Â Â Â Â {/* Size (centered buttons) */}
Â Â Â Â Â Â Â Â Â Â <Text style={styles.sectionTitle}>Size</Text>
Â Â Â Â Â Â Â Â Â Â <View style={styles.centerRow}>
Â Â Â Â Â Â Â Â Â Â Â Â <Choice label="8 oz"Â Â selected={size === '8oz'}Â Â onPress={() => setSize('8oz')} />
Â Â Â Â Â Â Â Â Â Â Â Â <Choice label="12 oz" selected={size === '12oz'} onPress={() => setSize('12oz')} />
Â Â Â Â Â Â Â Â Â Â </View>

Â Â Â Â Â Â Â Â Â Â {/* Pack (centered, wraps neatly) */}
Â Â Â Â Â Â Â Â Â Â <Text style={[styles.sectionTitle, { marginTop: 18 }]}>Pack</Text>
Â Â Â Â Â Â Â Â Â Â <View style={styles.centerRow}>
Â Â Â Â Â Â Â Â Â Â Â Â {PACK_OPTIONS.map((p) => (
Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Choice key={p} label={`${p}-pack`} selected={pack === p} onPress={() => setPack(p)} />
Â Â Â Â Â Â Â Â Â Â Â Â ))}
Â Â Â Â Â Â Â Â Â Â </View>

Â Â Â Â Â Â Â Â Â Â {/* Quantity */}
Â Â Â Â Â Â Â Â Â Â <Text style={[styles.sectionTitle, { marginTop: 18 }]}>Quantity</Text>
Â Â Â Â Â Â Â Â Â Â <View style={styles.qtyRow}>
Â Â Â Â Â Â Â Â Â Â Â Â <QtyBtn label="â€“" onPress={() => setQty((q) => Math.max(1, q - 1))} />
Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.qtyText}>{qty}</Text>
Â Â Â Â Â Â Â Â Â Â Â Â <QtyBtn label="+" onPress={() => setQty((q) => Math.min(99, q + 1))} />
Â Â Â Â Â Â Â Â Â Â </View>

Â Â Â Â Â Â Â Â Â Â {/* Price + CTA */}
Â Â Â Â Â Â Â Â Â Â <View style={{ marginTop: 12, alignItems: 'center' }}>
Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.priceValue}>${total.toFixed(2)}</Text>
Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.note}>{qty} Ã— {pack}-pack â€¢ {size}</Text>
Â Â Â Â Â Â Â Â Â Â </View>

Â Â Â Â Â Â Â Â Â Â <TouchableOpacity style={styles.primaryBtn} onPress={goToCart}>
Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.primaryBtnText}>Add to Cart</Text>
Â Â Â Â Â Â Â Â Â Â </TouchableOpacity>
Â Â Â Â Â Â Â Â </View>
Â Â Â Â Â Â </ScrollView>
Â Â Â Â </SafeAreaView>
Â Â );
}

/* --- Reusable bits --- */

function Choice({
Â Â label, selected, onPress,
}: { label: string; selected: boolean; onPress: () => void }) {
Â Â return (
Â Â Â Â <TouchableOpacity
Â Â Â Â Â Â onPress={onPress}
Â Â Â Â Â Â style={[styles.choiceBtn, selected && styles.choiceBtnSelected]}
Â Â Â Â Â Â accessibilityState={{ selected }}
Â Â Â Â >
Â Â Â Â Â Â <Text style={[styles.choiceText, selected && styles.choiceTextSelected]} numberOfLines={1}>
Â Â Â Â Â Â Â Â {label}
Â Â Â Â Â Â </Text>
Â Â Â Â </TouchableOpacity>
Â Â );
}

function QtyBtn({ label, onPress }: { label: string; onPress: () => void }) {
Â Â return (
Â Â Â Â <TouchableOpacity onPress={onPress} style={styles.qtyBtn}>
Â Â Â Â Â Â <Text style={styles.qtyBtnText}>{label}</Text>
Â Â Â Â </TouchableOpacity>
Â Â );
}

/* --- Styles --- */

const styles = StyleSheet.create({
Â Â card: {
Â Â Â Â backgroundColor: BG_CREAM,
Â Â Â Â borderRadius: 14,
Â Â Â Â padding: 18,
Â Â Â Â borderWidth: 1,
Â Â Â Â borderColor: '#eadccf',
Â Â Â Â maxWidth: 920,
Â Â Â Â alignSelf: 'center',
Â Â Â Â width: '100%',
Â Â },

Â Â /* Bigger, centered hero image */
Â Â heroImage: {
Â Â Â Â alignSelf: 'center',
Â Â Â Â width: '100%',
Â Â Â Â height: isSmall ? 220 : 280, // bigger on larger screens
Â Â Â Â marginBottom: 10,
Â Â },

Â Â title: {
Â Â Â Â fontSize: isSmall ? 20 : 24,
Â Â Â Â fontWeight: '800',
Â Â Â Â color: '#fff',
Â Â Â Â backgroundColor: GREEN,
Â Â Â Â paddingHorizontal: 12,
Â Â Â Â paddingVertical: 6,
Â Â Â Â borderRadius: 6,
Â Â Â Â alignSelf: 'center', // centered title
Â Â },
Â Â subtitle: {
Â Â Â Â marginTop: 8,
Â Â Â Â color: GOLD,
Â Â Â Â textAlign: 'center',
Â Â Â Â fontSize: isSmall ? 14 : 16,
Â Â Â Â fontWeight: '700',
Â Â },

Â Â /* Description block */
Â Â descBlock: {
Â Â Â Â marginTop: 12,
Â Â Â Â gap: 4,
Â Â },
Â Â descLine: {
Â Â Â Â color: '#3b3b3b',
Â Â Â Â fontSize: isSmall ? 13 : 14,
Â Â Â Â lineHeight: isSmall ? 18 : 20,
Â Â Â Â flexShrink: 1,
Â Â Â Â minWidth: 0,
Â Â Â Â flexWrap: 'wrap',
Â Â Â Â textAlign: 'left',
Â Â },

Â Â sectionTitle: {
Â Â Â Â fontSize: 14,
Â Â Â Â fontWeight: '800',
Â Â Â Â marginTop: 18,
Â Â Â Â color: GREEN,
Â Â Â Â alignSelf: 'center',
Â Â },

Â Â /* Centered row for choices */
Â Â centerRow: {
Â Â Â Â marginTop: 10,
Â Â Â Â flexDirection: 'row',
Â Â Â Â flexWrap: 'wrap',
Â Â Â Â justifyContent: 'center',Â Â // ðŸ‘ˆ centers the buttons
Â Â Â Â gap: 10,
Â Â },

Â Â /* Choice buttons: fixed height, flexible width, centered text */
Â Â choiceBtn: {
Â Â Â Â height: BTN_H,
Â Â Â Â minWidth: 120,Â Â Â Â Â Â Â Â Â Â Â // gives each button some width
Â Â Â Â maxWidth: 180,
Â Â Â Â paddingHorizontal: 12,
Â Â Â Â borderWidth: 1,
Â Â Â Â borderColor: GREEN,
Â Â Â Â borderRadius: 10,
Â Â Â Â backgroundColor: BG_CREAM,
Â Â Â Â alignItems: 'center',
Â Â Â Â justifyContent: 'center',
Â Â },
Â Â choiceBtnSelected: { backgroundColor: GREEN, borderColor: GREEN },
Â Â choiceText: { fontSize: isSmall ? 13 : 14, fontWeight: '700', color: GREEN, textAlign: 'center' },
Â Â choiceTextSelected: { color: BG_CREAM },

Â Â /* Quantity */
Â Â qtyRow: { flexDirection: 'row', alignItems: 'center', gap: 14, justifyContent: 'center', marginTop: 6 },
Â Â qtyBtn: {
Â Â Â Â height: BTN_H, width: BTN_H,
Â Â Â Â alignItems: 'center', justifyContent: 'center',
Â Â Â Â borderRadius: 10, backgroundColor: GREEN,
Â Â },
Â Â qtyBtnText: { color: BG_CREAM, fontSize: isSmall ? 18 : 22, fontWeight: '800' },
Â Â qtyText: { minWidth: 36, textAlign: 'center', fontSize: isSmall ? 16 : 18, fontWeight: '800', color: GREEN },

Â Â /* Price + CTA */
Â Â priceValue: { fontSize: isSmall ? 22 : 24, fontWeight: '900', color: GREEN },
Â Â note: { fontSize: isSmall ? 12 : 13, color: GOLD, marginTop: 2 },
Â Â primaryBtn: {
Â Â Â Â marginTop: 10,
Â Â Â Â height: BTN_H,
Â Â Â Â borderRadius: 10,
Â Â Â Â backgroundColor: GREEN,
Â Â Â Â alignItems: 'center',
Â Â Â Â justifyContent: 'center',
Â Â Â Â alignSelf: 'center',
Â Â Â Â paddingHorizontal: 18,
Â Â },
Â Â primaryBtnText: { color: BG_CREAM, fontSize: isSmall ? 15 : 16, fontWeight: '800' },
});
