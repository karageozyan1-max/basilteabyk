import React from 'react';
import { View, Text, ScrollView, TouchableOpacity, Image, SafeAreaView, StyleSheet } from 'react-native';
import { useRouter } from 'expo-router';
import { useCart } from './CartContext';

const FREE_SHIP_THRESHOLD = 50;
const SHIPPING_FLAT = 6.99;
const TAX_RATE = 0.08;

export default function CheckoutScreen() {
Â Â const router = useRouter();
Â Â const { items, subtotal } = useCart();

Â Â const shipping = subtotal >= FREE_SHIP_THRESHOLD || subtotal === 0 ? 0 : SHIPPING_FLAT;
Â Â const tax = subtotal * TAX_RATE;
Â Â const total = subtotal + shipping + tax;
Â Â const hasItems = items.length > 0;

Â Â return (
Â Â Â Â <SafeAreaView style={{ flex: 1, backgroundColor: '#fdf6ec' }}>
Â Â Â Â Â Â <ScrollView contentContainerStyle={{ padding: 20, paddingBottom: 64 }} showsVerticalScrollIndicator={false}>
Â Â Â Â Â Â Â Â <Text style={styles.title}>Checkout</Text>

Â Â Â Â Â Â Â Â {!hasItems ? (
Â Â Â Â Â Â Â Â Â Â <>
Â Â Â Â Â Â Â Â Â Â Â Â <Text style={{ color: '#b38c2c', marginTop: 6 }}>Your cart is empty.</Text>
Â Â Â Â Â Â Â Â Â Â Â Â <TouchableOpacity style={styles.primaryBtn} onPress={() => router.push('/shop')}>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.primaryBtnText}>Go to Shop</Text>
Â Â Â Â Â Â Â Â Â Â Â Â </TouchableOpacity>
Â Â Â Â Â Â Â Â Â Â Â Â <TouchableOpacity style={styles.secondaryBtn} onPress={() => router.back()}>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.secondaryBtnText}>Back</Text>
Â Â Â Â Â Â Â Â Â Â Â Â </TouchableOpacity>
Â Â Â Â Â Â Â Â Â Â </>
Â Â Â Â Â Â Â Â ) : (
Â Â Â Â Â Â Â Â Â Â <>
Â Â Â Â Â Â Â Â Â Â Â Â {items.map((it, idx) => (
Â Â Â Â Â Â Â Â Â Â Â Â Â Â <View key={idx} style={styles.itemRow}>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Image source={require('../assets/images/basil-bottle.png')} style={{ width: 64, height: 64, borderRadius: 8, marginRight: 10 }} />
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <View style={{ flex: 1 }}>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.itemName}>Basil Tea â€” {it.sizeKey}</Text>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.itemPrice}>${it.unitPrice.toFixed(2)} Ã— {it.qty} = ${(it.unitPrice * it.qty).toFixed(2)}</Text>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â </View>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â </View>
Â Â Â Â Â Â Â Â Â Â Â Â ))}

Â Â Â Â Â Â Â Â Â Â Â Â <Row label="Subtotal" value={`$${subtotal.toFixed(2)}`} />
Â Â Â Â Â Â Â Â Â Â Â Â <Row label="Shipping" value={shipping === 0 ? 'FREE' : `$${shipping.toFixed(2)}`} />
Â Â Â Â Â Â Â Â Â Â Â Â <Row label={`Tax (${Math.round(TAX_RATE * 100)}%)`} value={`$${tax.toFixed(2)}`} />
Â Â Â Â Â Â Â Â Â Â Â Â <Row label="Total" value={`$${total.toFixed(2)}`} bold />

Â Â Â Â Â Â Â Â Â Â Â Â {subtotal >= FREE_SHIP_THRESHOLD && (
Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.freeMsg}>You unlocked FREE shipping! You saved ${SHIPPING_FLAT.toFixed(2)} ðŸŽ‰</Text>
Â Â Â Â Â Â Â Â Â Â Â Â )}

Â Â Â Â Â Â Â Â Â Â Â Â <TouchableOpacity style={styles.primaryBtn} onPress={() => router.replace('/order-success')}>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.primaryBtnText}>Place Order</Text>
Â Â Â Â Â Â Â Â Â Â Â Â </TouchableOpacity>
Â Â Â Â Â Â Â Â Â Â </>
Â Â Â Â Â Â Â Â )}
Â Â Â Â Â Â </ScrollView>
Â Â Â Â </SafeAreaView>
Â Â );
}

function Row({ label, value, bold }: { label: string; value: string; bold?: boolean }) {
Â Â return (
Â Â Â Â <View style={styles.row}>
Â Â Â Â Â Â <Text style={[styles.rowLabel, bold && styles.rowBold]}>{label}</Text>
Â Â Â Â Â Â <Text style={[styles.rowValue, bold && styles.rowBold]}>{value}</Text>
Â Â Â Â </View>
Â Â );
}

const styles = StyleSheet.create({
Â Â title: { fontSize: 22, fontWeight: '700', marginBottom: 16 },
Â Â itemRow: { flexDirection: 'row', alignItems: 'center', marginVertical: 8 },
Â Â itemName: { fontSize: 16, fontWeight: '600' },
Â Â itemPrice: { fontSize: 14, color: '#333' },
Â Â row: { flexDirection: 'row', justifyContent: 'space-between', marginVertical: 4 },
Â Â rowLabel: { fontSize: 16 },
Â Â rowValue: { fontSize: 16 },
Â Â rowBold: { fontWeight: '700' },
Â Â freeMsg: { marginTop: 10, color: '#0b3d2e', fontWeight: '700' },
Â Â primaryBtn: { backgroundColor: '#1f5134', padding: 12, borderRadius: 8, marginTop: 16 },
Â Â primaryBtnText: { color: 'white', textAlign: 'center', fontWeight: '700' },
Â Â secondaryBtn: { borderWidth: 1, borderColor: '#1f5134', padding: 12, borderRadius: 8, marginTop: 8 },
Â Â secondaryBtnText: { color: '#1f5134', textAlign: 'center', fontWeight: '700' },
});
