'use client';

import React, { useMemo } from 'react';
import { View, Text, Image, StyleSheet, ScrollView, TouchableOpacity, Dimensions } from 'react-native';
import { SafeAreaView } from 'react-native-safe-area-context';
import { useRouter, useLocalSearchParams } from 'expo-router';
import { SIZE_PRICES } from './prices';

const BG_CREAM = '#fdf6ec';
const GREEN = '#0b3d2e';
const GOLD = '#c7a45a';

const { width } = Dimensions.get('window');
const isSmall = width < 380;
const BTN_H = isSmall ? 44 : 52;

type SizeKey = '8oz' | '12oz';

const FREE_SHIP_THRESHOLD = 50;
const SHIPPING_FLAT = 6.99;
const TAX_RATE = 0.08;

export default function CheckoutScreen() {
Â Â const router = useRouter();
Â Â const params = useLocalSearchParams<{ size?: string; pack?: string; qty?: string }>();

Â Â const size: SizeKey = (params.size as SizeKey) || '8oz';
Â Â const pack = Math.max(0, parseInt(params.pack || '0', 10));
Â Â const qtyÂ Â = Math.max(1, parseInt(params.qty || '1', 10));

Â Â const unit = SIZE_PRICES[size] ?? 0;
Â Â const subtotal = useMemo(() => unit * pack * qty, [unit, pack, qty]);
Â Â const shipping = useMemo(() => (subtotal >= FREE_SHIP_THRESHOLD || subtotal === 0 ? 0 : SHIPPING_FLAT), [subtotal]);
Â Â const tax = useMemo(() => subtotal * TAX_RATE, [subtotal]);
Â Â const total = useMemo(() => subtotal + shipping + tax, [subtotal, shipping, tax]);

Â Â const hasItem = pack > 0 && qty > 0;

Â Â return (
Â Â Â Â <SafeAreaView style={{ flex: 1, backgroundColor: BG_CREAM }}>
Â Â Â Â Â Â <ScrollView contentContainerStyle={{ padding: 20, paddingBottom: 54 }} showsVerticalScrollIndicator={false}>
Â Â Â Â Â Â Â Â <View style={styles.card}>
Â Â Â Â Â Â Â Â Â Â <Text style={styles.title}>Checkout</Text>

Â Â Â Â Â Â Â Â Â Â {!hasItem ? (
Â Â Â Â Â Â Â Â Â Â Â Â <>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Text style={{ color: GOLD, marginTop: 6 }}>Your cart is empty.</Text>

Â Â Â Â Â Â Â Â Â Â Â Â Â Â <TouchableOpacity style={styles.primaryBtn} onPress={() => router.push('/shop')}>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.primaryBtnText}>Go to Shop</Text>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â </TouchableOpacity>

Â Â Â Â Â Â Â Â Â Â Â Â Â Â <TouchableOpacity style={styles.secondaryBtn} onPress={() => router.back()}>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.secondaryBtnText}>Back</Text>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â </TouchableOpacity>
Â Â Â Â Â Â Â Â Â Â Â Â </>
Â Â Â Â Â Â Â Â Â Â ) : (
Â Â Â Â Â Â Â Â Â Â Â Â <>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â {/* Item */}
Â Â Â Â Â Â Â Â Â Â Â Â Â Â <View style={[styles.itemRow, { marginTop: 12 }]}>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Image
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â source={require('../assets/images/basil-bottle.png')}
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â style={{ width: 64, height: 64, borderRadius: 8, marginRight: 10 }}
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â resizeMode="cover"
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â />
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <View style={{ flex: 1, minWidth: 0 }}>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.itemName}>Basil Tea</Text>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.itemMeta}>{qty} Ã— {pack}-pack â€¢ {size}</Text>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â </View>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.itemPrice}>${unit.toFixed(2)}</Text>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â </View>

Â Â Â Â Â Â Â Â Â Â Â Â Â Â {/* Totals */}
Â Â Â Â Â Â Â Â Â Â Â Â Â Â <View style={{ height: 10 }} />
Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Row label="Subtotal" value={`$${subtotal.toFixed(2)}`} />
Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Row label="Shipping" value={shipping === 0 ? 'FREE' : `$${shipping.toFixed(2)}`} />
Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Row label={`Tax (${Math.round(TAX_RATE * 100)}%)`} value={`$${tax.toFixed(2)}`} />
Â Â Â Â Â Â Â Â Â Â Â Â Â Â <View style={{ height: 8 }} />
Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Row label="Total" value={`$${total.toFixed(2)}`} bold />

Â Â Â Â Â Â Â Â Â Â Â Â Â Â {/* Free shipping message */}
Â Â Â Â Â Â Â Â Â Â Â Â Â Â {subtotal < FREE_SHIP_THRESHOLD && subtotal > 0 && (
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.freeMsg}>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Add ${(FREE_SHIP_THRESHOLD - subtotal).toFixed(2)} more to get FREE shipping ðŸŽ‰
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â </Text>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â )}
Â Â Â Â Â Â Â Â Â Â Â Â Â Â {subtotal >= FREE_SHIP_THRESHOLD && (
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Text style={[styles.freeMsg, { color: GREEN }]}>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â You unlocked FREE shipping! You saved ${SHIPPING_FLAT.toFixed(2)} ðŸ™Œ
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â </Text>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â )}

Â Â Â Â Â Â Â Â Â Â Â Â Â Â {/* Actions */}
Â Â Â Â Â Â Â Â Â Â Â Â Â Â <TouchableOpacity style={styles.primaryBtn} onPress={() => router.replace('/order-success')}>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.primaryBtnText}>Place Order</Text>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â </TouchableOpacity>

Â Â Â Â Â Â Â Â Â Â Â Â Â Â <TouchableOpacity
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â style={styles.secondaryBtn}
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â onPress={() => router.push({ pathname: '/cart', params: { size, pack: String(pack), qty: String(qty) } })}
Â Â Â Â Â Â Â Â Â Â Â Â Â Â >
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.secondaryBtnText}>Back to Cart</Text>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â </TouchableOpacity>

Â Â Â Â Â Â Â Â Â Â Â Â Â Â <TouchableOpacity style={styles.secondaryBtn} onPress={() => router.push('/shop')}>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Text style={styles.secondaryBtnText}>Continue Shopping</Text>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â </TouchableOpacity>
Â Â Â Â Â Â Â Â Â Â Â Â </>
Â Â Â Â Â Â Â Â Â Â )}
Â Â Â Â Â Â Â Â </View>
Â Â Â Â Â Â </ScrollView>
Â Â Â Â </SafeAreaView>
Â Â );
}

function Row({ label, value, bold }: { label: string; value: string; bold?: boolean }) {
Â Â return (
Â Â Â Â <View style={styles.row}>
Â Â Â Â Â Â <Text style={[styles.rowLabel, bold && styles.rowBold]}>{label}</Text>
Â Â Â Â Â Â <Text style={[styles.rowValue, bold && styles.rowBold]}>{value}</Text>
Â Â Â Â </View>
Â Â );
}

const styles = StyleSheet.create({
Â Â card: {
Â Â Â Â backgroundColor: BG_CREAM,
Â Â Â Â borderRadius: 14,
Â Â Â Â padding: 18,
Â Â Â Â borderWidth: 1,
Â Â Â Â borderColor: '#eadccf',
Â Â Â Â maxWidth: 920,
Â Â Â Â alignSelf: 'center',
Â Â Â Â width: '100%',
Â Â },

Â Â title: {
Â Â Â Â fontSize: isSmall ? 18 : 22,
Â Â Â Â fontWeight: '800',
Â Â Â Â color: '#fff',
Â Â Â Â backgroundColor: GREEN,
Â Â Â Â paddingHorizontal: 10,
Â Â Â Â paddingVertical: 4,
Â Â Â Â borderRadius: 6,
Â Â Â Â alignSelf: 'flex-start',
Â Â },

Â Â itemRow: { flexDirection: 'row', alignItems: 'center' },
Â Â itemName: { fontSize: isSmall ? 14 : 16, fontWeight: '700', color: GREEN },
Â Â itemMeta: { fontSize: isSmall ? 12 : 13, color: GOLD, marginTop: 2, flexShrink: 1, minWidth: 0, flexWrap: 'wrap' },
Â Â itemPrice: { fontSize: isSmall ? 14 : 16, fontWeight: '700', color: GREEN },

Â Â row: { flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginVertical: 4 },
Â Â rowLabel: { fontSize: isSmall ? 13 : 14, color: '#333' },
Â Â rowValue: { fontSize: isSmall ? 13 : 14, color: '#333' },
Â Â rowBold: { fontWeight: '800', color: GREEN },

Â Â freeMsg: { marginTop: 8, color: GOLD, fontWeight: '700' },

Â Â primaryBtn: {
Â Â Â Â marginTop: 14, height: BTN_H, borderRadius: 10, backgroundColor: GREEN,
Â Â Â Â alignItems: 'center', justifyContent: 'center',
Â Â },
Â Â primaryBtnText: { color: BG_CREAM, fontSize: isSmall ? 14 : 15, fontWeight: '700' },

Â Â secondaryBtn: {
Â Â Â Â marginTop: 10, height: BTN_H, borderRadius: 10,
Â Â Â Â borderWidth: 1, borderColor: GREEN, backgroundColor: BG_CREAM,
Â Â Â Â alignItems: 'center', justifyContent: 'center',
Â Â },
Â Â secondaryBtnText: { fontSize: isSmall ? 14 : 15, fontWeight: '700', color: GREEN },
});
